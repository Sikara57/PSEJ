.square{
  width: 50px;
  height: 50px;
  border: 1px solid black;
  text-align: center;
}

/* ------------------------------------------- */

#relatif1 {
  background-color: tomato;
}

#relatif2 {
  background-color: cyan;
  position: relative;
  /* je le pousse de 50px +1px bordure gauche +1px bordure droite depuis la gauche */
  left: 52px;
}

#relatif3 {
  background-color: purple;
  position:relative;
  /* Même principe qu'avant mais il y a 2 bordures en plus */
  left: 104px;
}

#relatif4 {
  background-color: yellow;
  position:relative;
  left: 156px;
  bottom: 104px;
}

#relatif5 {
  background-color: paleturquoise;
  position:relative;
  left: 208px;
  bottom: 208px;
}

#relatif6 {
  background-color: green;
  position:relative;
  left: 260px;
  bottom: 208px;
}

/* ------------------------------------------------- */

#containerAbsolute {
  height: 300px;
  background-color: black;
  /* Ajouter la position relative au container va changer le point d'origine */
  position: relative;
  color: white;
}

/*
  Dès que je positionne avec top, left, right, bottom, les containers en absolute sont automatiquement positionné par rapport au dernier parent positionné
*/
#absol1{
  background-color: lightgreen;
  position: absolute;
  top: 10px;
  color: black;
}

#absol2 {
  background-color: lightyellow;
  position: absolute;
  top: 50px;
  left: 150px;
  /* Pour changer l'ordre d'affichage des plan je vais utiliser z-index */
  z-index: 1;
  color: black;
}

#absol3 {
  background-color: lightcoral;
  position: absolute;
  top: 55px;
  left: 155px;
  color: black;
}

/* ----------------------------------------------- */
#containerFixed ul {
  list-style-type: none;
  padding: 0;
}

#containerFixed {
  border: 1px solid black;
  background-color: brown;
  width: 15px; 
  text-align: center;
  position: fixed;
  top: 50px;
  left: 10px;
}

/* --------------------------------------------------*/
#containerSticky {
  border: 1px solid black;
  width: 20px;
  height: 20px;
  background-color: tomato;
  text-align: center;
  position: sticky;
  top: 20px;
  /* je vais pousser mon élément de 90% de la taille du parent */
  left: 90%;
}


/* -------------------------------------------------------------- */
#containerFloat {
  width: 400px;
  margin: 50px auto;
  padding: 15px;
  text-align: justify;
  border: 1px solid black;
}

#f1 {
  float: left;
  background-color: lightcoral;
}

#f2 {
  /* j'arrête de faire flotter mes éléments ce qui a pour effet de redisposer les éléments dans l'ordre du flux */
  clear:both;
  background-color: lightyellow;
}

#f3 {
  float: right;
  background-color: paleturquoise;
}

#f4 {
  float: right;
  background-color: tomato;
}

#f5 {
  float: right;
  background-color: green;
}
